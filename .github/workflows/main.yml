name: Python application

on:
  push:
    branches: [ main , railflow]
  pull_request:
    branches: [ main , railflow ]

jobs:
  test_login:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        mkdir test-reports
    - name: Test with pytest
      run: |
        pytest -v -m login --junitxml=test-reports/login_results.xml
    - uses: actions/upload-artifact@v2
      with:
        name: login_results
        path: test-reports/login_results.xml
      if: ${{ always() }}


  test_register:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        mkdir test-reports
    - name: Test with pytest
      run: |
        pytest -v -m register --junitxml=test-reports/register_results.xml
    - uses: actions/upload-artifact@v2
      with:
        name: register_results
        path: test-reports/register_results.xml
      if: ${{ always() }}

  test_users:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        mkdir test-reports
    - name: Test with pytest
      run: |
        pytest -v -m users --junitxml=test-reports/users_results.xml
    - uses: actions/upload-artifact@v2
      with:
        name: users_results
        path: test-reports/users_results.xml
      if: ${{ always() }}
      
  test_resource:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        mkdir test-reports
    - name: Test with pytest
      run: |
        pytest -v -m resource --junitxml=test-reports/resource_results.xml
    - uses: actions/upload-artifact@v2
      with:
        name: resource_results
        path: test-reports/resource_results.xml
      if: ${{ always() }}

  
  railflow-test:
    runs-on: ubuntu-latest
    container: railflow/railflow:latest
    defaults:
      run:
        working-directory: /usr/railflow
    
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          path: /usr/railflow
      - name: List build download dir
        run: |
          ls /usr/railflow
          mv /usr/railflow/login_results/login_results.xml /usr/railflow
          mv /usr/railflow/users_results/users_results.xml /usr/railflow
          mv /usr/railflow/resource_results/resource_results.xml /usr/railflow
          mv /usr/railflow/register_results/register_results.xml /usr/railflow

      # Runs a single command using the runners shell
      - name: Run railflow testing
        run: npx railflow -k LJLPF-WOJFR-CIXFG-BLJEW -url https://testrail7.railflow.io/ -u manishsaini74.ms@gmail.com -p password123 -pr "GitHub-Demo" -path Demo/Pytest -f JUnit -r /usr/railflow/*.xml -sm path -tp APIDemoTest